/*
 * Data Repository Service
 *  GET request:  - Fetch a DrsObject from the database by sending a unique ID through the request - Fetch an access url to the data which the object refers to - Fetch DrsObjects by doing a search on the aliases  POST request:  - Create a non-existing DrsObject in the database by giving an identifier  DELETE request:  - Delete a DrsObject from the database by unique identifier  PUT request:  - Update an existing DrsObject by unique identifier and the changes in the body 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: ict@cmgg.be
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.client.model.Checksums;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * The checksum of the &#x60;&#x60;&#x60;DrsObject&#x60;&#x60;&#x60;. At least one checksum must be provided.         For blobs, the checksum is computed over the bytes in the blob.         For bundles, the checksum is computed over a sorted concatenation of the checksums of its         top-level contained objects (not recursive, names not included).         The list of checksums is sorted alphabetically (hex-code) before concatenation         and a further checksum is performed on the concatenated checksum value.         For example, if a bundle contains blobs with the following checksums:         md5(blob1) &#x3D; 72794b6d md5(blob2) &#x3D; 5e089d29 Then the checksum of the bundle is:         md5( concat( sort( md5(blob1), md5(blob2) ) ) ) &#x3D; md5( concat( sort( 72794b6d, 5e089d29 ) ) ) &#x3D;         md5( concat( 5e089d29, 72794b6d ) ) &#x3D; md5( 5e089d2972794b6d ) &#x3D; f7a29a04
 */
@Schema(description = "The checksum of the ```DrsObject```. At least one checksum must be provided.         For blobs, the checksum is computed over the bytes in the blob.         For bundles, the checksum is computed over a sorted concatenation of the checksums of its         top-level contained objects (not recursive, names not included).         The list of checksums is sorted alphabetically (hex-code) before concatenation         and a further checksum is performed on the concatenated checksum value.         For example, if a bundle contains blobs with the following checksums:         md5(blob1) = 72794b6d md5(blob2) = 5e089d29 Then the checksum of the bundle is:         md5( concat( sort( md5(blob1), md5(blob2) ) ) ) = md5( concat( sort( 72794b6d, 5e089d29 ) ) ) =         md5( concat( 5e089d29, 72794b6d ) ) = md5( 5e089d2972794b6d ) = f7a29a04")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-25T15:49:43.145836023+02:00[Europe/Brussels]")

public class AllOfDrsObjectChecksums extends Checksums {

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    return super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllOfDrsObjectChecksums {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
